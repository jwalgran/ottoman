== Ottoman

Ottoman is intended to be an easy to use open source library for .NET applications 
using CouchDB for persistence.  Please excuse the mess, this is a new project and 
we are trying to get everything in order.  We will be setting up a project site,
mailing list, and issue tracker.  This will be an active open source project and 
backed by a company.  We have big plans for this library.

== Building

To run the automated build tasks, you will need to have ruby installed on your local 
machine.  You can download the one click installer for windows from here:

	http://www.ruby-lang.org/en/downloads/
	
After installation, make sure you grab the rake gem by running at a command prompt:

	gem install rake

Once you've cloned the repository to your local machine you're ready to run the automated 
build scripts.  Open a command prompt and navigate to the directory of your cloned 
repository (Hint:  The location of build.cmd).  Then you can run the build commands 
by typing without the quotes:

	To compile:  Type "build compile" or just "build" and hit enter.
	To test:  Type "build test" and hit enter
	
== Using

The current state of Ottoman allows you to manage databases on your CouchDB server.  All you 
need to get started, is the URL to the CouchDB server you want to connect to:

	IServer couchServer = ServerFactory.Create("http://127.0.0.1:5984/");

Once you have an instance of Server, you can start manipulating the databases on your 
CouchDB server.

To create a database:
	
	couchServer.CreateDatabase("test");
	
	If Ottoman was not able to create a database, a CannotCreateDatabaseException will 
	be thrown with the details of what happened.
	
To retrieve a database:

	IDatabase couchDatabase = couchServer.GetDatabase("test");
	
	You can view info about your database with the IDatabase instance.  The next major 
	feature will allow you to manage documents within a database, by using your IDatabase 
	instance.  For example:
	
		User user = couchDatabase.GetDocument<User>("id");
	
	If Ottoman was not able to retrieve a database, a CannotGetDatabaseException will 
	be thrown with the details of what happened.

To delete a database:

	couchServer.DeleteDatabase("test");
	
	If Ottoman was not able to delete a database, a CannotDeleteDatabaseException will 
	be thrown with the details of what happened.

To retrieve a list of databases:
	
	string[] databases = couchServer.GetDatabases();

== License

Copyright 2007-2009 SineSignal, LLC.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   A copy of the License can be found in the LICENSE file or you may 
   obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

---
The Ottoman Dev Team
http://sinesignal.com